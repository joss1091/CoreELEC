From 3d911e744c84fc1e837da898d0fb70689081ed23 Mon Sep 17 00:00:00 2001
From: wrxtasy <wrxtasy@amnet.net.au>
Date: Wed, 20 Feb 2019 16:28:21 +0800
Subject: [PATCH] CE settings: add mute HDMI audio & GPU Oclocking

---
 .../resources/strings.po                      | 87 ++++++++++++++++++-
 system/settings/settings.xml                  | 46 ++++++++++
 xbmc/settings/Settings.cpp                    |  7 ++
 xbmc/settings/Settings.h                      |  7 ++
 xbmc/windowing/amlogic/WinSystemAmlogic.cpp   | 46 ++++++++++
 5 files changed, 192 insertions(+), 1 deletion(-)

diff --git a/addons/resource.language.en_gb/resources/strings.po b/addons/resource.language.en_gb/resources/strings.po
index b7ea31b..57efa69 100644
--- a/addons/resource.language.en_gb/resources/strings.po
+++ b/addons/resource.language.en_gb/resources/strings.po
@@ -8325,7 +8325,92 @@ msgctxt "#14277"
 msgid "Allow remote control from applications on other systems"
 msgstr ""
 
-#empty strings from id 14278 to 14300
+#: system/settings/settings.xml
+msgctxt "#14278"
+msgid "CoreELEC"
+msgstr ""
+
+#: system/settings/settings.xml
+msgctxt "#14279"
+msgid "This category contains settings for CoreELEC builds."
+msgstr ""
+
+#: system/settings/settings.xml
+msgctxt "#14280"
+msgid "Amlogic Settings"
+msgstr ""
+
+#: system/settings/settings.xml
+msgctxt "#14281"
+msgid "Disable noise reduction"
+msgstr ""
+
+#: system/settings/settings.xml
+msgctxt "#14282"
+msgid "Enable this to disable noise reduction. Requires reboot."
+msgstr ""
+
+#: system/settings/settings.xml
+msgctxt "#14283"
+msgid "Disable deinterlacing"
+msgstr ""
+
+#: system/settings/settings.xml
+msgctxt "#14284"
+msgid "Enable this to disable deinterlacing. Requires reboot."
+msgstr ""
+
+#: system/settings/settings.xml
+msgctxt "#14285"
+msgid "Limit output to 8-bit"
+msgstr ""
+
+#: system/settings/settings.xml
+msgctxt "#14286"
+msgid "Enable this to limit output colour depth to 8-bit. Requires reboot."
+msgstr ""
+
+#: system/settings/settings.xml
+msgctxt "#14289"
+msgid "Use 4:2:2 colour subsampling"
+msgstr ""
+
+#: system/settings/settings.xml
+msgctxt "#14290"
+msgid "Some displays (usually LG) work better with 4:2:2 colour subsampling. Requires reboot."
+msgstr ""
+
+#: system/settings/settings.xml
+msgctxt "#14291"
+msgid "Enable HEVC seek workaround"
+msgstr ""
+
+#: system/settings/settings.xml
+msgctxt "#14292"
+msgid "Enable this if you have problems with HEVC content after seeking."
+msgstr ""
+
+#: system/settings/settings.xml
+msgctxt "#14293"
+msgid "Mute HDMI audio output."
+msgstr ""
+
+#: system/settings/settings.xml
+msgctxt "#14294"
+msgid "Enable this for Optical audio only. Requires a reboot."
+msgstr ""
+
+#: system/settings/settings.xml
+msgctxt "#14295"
+msgid "Overclock the GPU"
+msgstr ""
+
+#: system/settings/settings.xml
+msgctxt "#14296"
+msgid "Enable this for a faster Kodi user interface ! Warning ! This will increase chipset temperatures. Requires a reboot."
+msgstr ""
+
+#empty strings from id 14297 to 14300
 
 #. pvr "channels" settings group label
 #: system/settings/settings.xml
diff --git a/system/settings/settings.xml b/system/settings/settings.xml
index 54f7e4c..6bc8774 100755
--- a/system/settings/settings.xml
+++ b/system/settings/settings.xml
@@ -2994,6 +2994,52 @@
         </setting>
       </group>
     </category>
+    <category id="coreelec" label="14278" help="14279">
+      <group id="1" label="14280">
+        <setting id="coreelec.amlogic.noisereduction" type="boolean" label="14281" help="14282">
+          <requirement>HAVE_AMCODEC</requirement>
+          <level>3</level>
+          <default>false</default>
+          <control type="toggle" />
+        </setting>
+        <setting id="coreelec.amlogic.deinterlacing" type="boolean" label="14283" help="14284">
+          <requirement>HAVE_AMCODEC</requirement>
+          <level>3</level>
+          <default>false</default>
+          <control type="toggle" />
+        </setting>
+        <setting id="coreelec.amlogic.limit8bit" type="boolean" label="14285" help="14286">
+          <requirement>HAVE_AMCODEC</requirement>
+          <level>3</level>
+          <default>false</default>
+          <control type="toggle" />
+        </setting>
+        <setting id="coreelec.amlogic.force422" type="boolean" label="14289" help="14290">
+          <requirement>HAVE_AMCODEC</requirement>
+          <level>3</level>
+          <default>false</default>
+          <control type="toggle" />
+        </setting>
+        <setting id="coreelec.amlogic.hevcworkaround" type="boolean" label="14291" help="14292">
+          <requirement>HAVE_AMCODEC</requirement>
+          <level>3</level>
+          <default>false</default>
+          <control type="toggle" />
+        </setting>
+       <setting id="coreelec.amlogic.mutehdmiaudio" type="boolean" label="14293" help="14294">
+          <requirement>HAVE_AMCODEC</requirement>
+          <level>3</level>
+          <default>false</default>
+          <control type="toggle" />
+        </setting>
+      <setting id="coreelec.amlogic.maxgpuclock" type="boolean" label="14295" help="14296">
+          <requirement>HAVE_AMCODEC</requirement>
+          <level>3</level>
+          <default>false</default>
+          <control type="toggle" />
+        </setting>
+      </group>
+    </category>
     <category id="cache" label="439" help="36399">
       <visible>false</visible>
       <group id="1">
diff --git a/xbmc/settings/Settings.cpp b/xbmc/settings/Settings.cpp
index 829e7b5..58f17c2 100644
--- a/xbmc/settings/Settings.cpp
+++ b/xbmc/settings/Settings.cpp
@@ -393,6 +393,13 @@ const std::string CSettings::SETTING_EVENTLOG_SHOW = "eventlog.show";
 const std::string CSettings::SETTING_MASTERLOCK_LOCKCODE = "masterlock.lockcode";
 const std::string CSettings::SETTING_MASTERLOCK_STARTUPLOCK = "masterlock.startuplock";
 const std::string CSettings::SETTING_MASTERLOCK_MAXRETRIES = "masterlock.maxretries";
+const std::string CSettings::SETTING_COREELEC_AMLOGIC_DEINTERLACING = "coreelec.amlogic.deinterlacing";
+const std::string CSettings::SETTING_COREELEC_AMLOGIC_NOISEREDUCTION = "coreelec.amlogic.noisereduction";
+const std::string CSettings::SETTING_COREELEC_AMLOGIC_LIMIT8BIT = "coreelec.amlogic.limit8bit";
+const std::string CSettings::SETTING_COREELEC_AMLOGIC_FORCE422 = "coreelec.amlogic.force422";
+const std::string CSettings::SETTING_COREELEC_AMLOGIC_HEVCWORKAROUND = "coreelec.amlogic.hevcworkaround";
+const std::string CSettings::SETTING_COREELEC_AMLOGIC_MUTEHDMIAUDIO = "coreelec.amlogic.mutehdmiaudio";
+const std::string CSettings::SETTING_COREELEC_AMLOGIC_MAXGPUCLOCK = "coreelec.amlogic.maxgpuclock";
 const std::string CSettings::SETTING_CACHE_HARDDISK = "cache.harddisk";
 const std::string CSettings::SETTING_CACHEVIDEO_DVDROM = "cachevideo.dvdrom";
 const std::string CSettings::SETTING_CACHEVIDEO_LAN = "cachevideo.lan";
diff --git a/xbmc/settings/Settings.h b/xbmc/settings/Settings.h
index d0743b3..6b99e6e 100644
--- a/xbmc/settings/Settings.h
+++ b/xbmc/settings/Settings.h
@@ -353,6 +353,13 @@ public:
   static const std::string SETTING_MASTERLOCK_LOCKCODE;
   static const std::string SETTING_MASTERLOCK_STARTUPLOCK;
   static const std::string SETTING_MASTERLOCK_MAXRETRIES;
+  static const std::string SETTING_COREELEC_AMLOGIC_DEINTERLACING;
+  static const std::string SETTING_COREELEC_AMLOGIC_NOISEREDUCTION;
+  static const std::string SETTING_COREELEC_AMLOGIC_LIMIT8BIT;
+  static const std::string SETTING_COREELEC_AMLOGIC_FORCE422;
+  static const std::string SETTING_COREELEC_AMLOGIC_HEVCWORKAROUND;
+  static const std::string SETTING_COREELEC_AMLOGIC_MUTEHDMIAUDIO;
+  static const std::string SETTING_COREELEC_AMLOGIC_MAXGPUCLOCK;
   static const std::string SETTING_CACHE_HARDDISK;
   static const std::string SETTING_CACHEVIDEO_DVDROM;
   static const std::string SETTING_CACHEVIDEO_LAN;
diff --git a/xbmc/windowing/amlogic/WinSystemAmlogic.cpp b/xbmc/windowing/amlogic/WinSystemAmlogic.cpp
index 0637f83..ca4e2d9 100644
--- a/xbmc/windowing/amlogic/WinSystemAmlogic.cpp
+++ b/xbmc/windowing/amlogic/WinSystemAmlogic.cpp
@@ -82,6 +82,52 @@ CWinSystemAmlogic::~CWinSystemAmlogic()
 
 bool CWinSystemAmlogic::InitWindowSystem()
 {
+  if (CServiceBroker::GetSettingsComponent()->GetSettings()->GetBool(CSettings::SETTING_COREELEC_AMLOGIC_NOISEREDUCTION))
+  {
+     CLog::Log(LOGDEBUG, "CWinSystemAmlogic::InitWindowSystem -- disabling noise reduction");
+     SysfsUtils::SetString("/sys/module/di/parameters/nr2_en", "0");
+  }
+
+  std::string attr = "";
+  SysfsUtils::GetString("/sys/class/amhdmitx/amhdmitx0/attr", attr);
+  //We delay writing attr until everything is done with it to avoid multiple display resets.
+  if (CServiceBroker::GetSettingsComponent()->GetSettings()->GetBool(CSettings::SETTING_COREELEC_AMLOGIC_FORCE422))
+  {
+     CLog::Log(LOGDEBUG, "CWinSystemAmlogic::InitWindowSystem -- Setting 422 output");
+     if (attr.find("444") != std::string::npos ||
+         attr.find("422") != std::string::npos ||
+         attr.find("420") != std::string::npos)
+       attr.replace(attr.find("4"),3,"422");
+     else
+       attr.append("422");
+  }
+  if (CServiceBroker::GetSettingsComponent()->GetSettings()->GetBool(CSettings::SETTING_COREELEC_AMLOGIC_LIMIT8BIT))
+  {
+     CLog::Log(LOGDEBUG, "CWinSystemAmlogic::InitWindowSystem -- Limiting display to 8bit colour depth");
+     if (attr.find("10bit") != std::string::npos)
+       attr.replace(attr.find("10bit"),5,"8bit");
+     else
+       attr.append("8bit");
+  }
+  if (CServiceBroker::GetSettingsComponent()->GetSettings()->GetBool(CSettings::SETTING_COREELEC_AMLOGIC_LIMIT8BIT) ||
+      CServiceBroker::GetSettingsComponent()->GetSettings()->GetBool(CSettings::SETTING_COREELEC_AMLOGIC_FORCE422))
+  {
+     //attr.append("now");
+     SysfsUtils::SetString("/sys/class/amhdmitx/amhdmitx0/attr", attr.c_str());
+  }
+
+  if (CServiceBroker::GetSettingsComponent()->GetSettings()->GetBool(CSettings::SETTING_COREELEC_AMLOGIC_MUTEHDMIAUDIO))
+  {
+     CLog::Log(LOGDEBUG, "CWinSystemAmlogic::InitWindowSystem -- muting hdmi audio");
+     SysfsUtils::SetString("/sys/class/amhdmitx/amhdmitx0/config", "audio_off");
+  }
+
+  if (CServiceBroker::GetSettingsComponent()->GetSettings()->GetBool(CSettings::SETTING_COREELEC_AMLOGIC_MAXGPUCLOCK))
+  {
+     CLog::Log(LOGDEBUG, "CWinSystemAmlogic::InitWindowSystem -- increasing GPU clock rate");
+     SysfsUtils::SetString("/sys/class/mpgpu/scale_mode", "2");
+  }
+
   m_nativeDisplay = EGL_DEFAULT_DISPLAY;
 
   CDVDVideoCodecAmlogic::Register();
-- 
2.17.1

